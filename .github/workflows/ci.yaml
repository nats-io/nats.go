name: ci
on: 
  push:
    branches:
      - main
  pull_request:
  release:
    types: [published]

jobs:
    lint:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
      
            - name: Setup Go
              uses: actions/setup-go@v5
              with:
                go-version: 'stable'

            - name: Install deps
              shell: bash --noprofile --norc -x -eo pipefail {0}
              run: |
                go get -t ./...
                go install honnef.co/go/tools/cmd/staticcheck@latest
                go install github.com/client9/misspell/cmd/misspell@latest
                go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
            
            - name: Run linters
              shell: bash --noprofile --norc -x -eo pipefail {0}
              run: |
                MODULE_DIRS=(
                  "."
                  "test"
                  "jetstream/test"
                  "micro/test"
                )
                for modDir in "${MODULE_DIRS[@]}"; do
                  $(exit $(cd "$modDir" && go fmt ./... | wc -l))
                done
                $(exit $(go fmt ./... | wc -l))
                go vet ./... ./test/... ./jetstream/test/... ./micro/test/...
                staticcheck ./... ./test/... ./jetstream/test/... ./micro/test/...
                find . -type f -name "*.go" | xargs misspell -error -locale US
                golangci-lint run --timeout 5m0s ./jetstream/... ./jetstream/test/...

    test:
        runs-on: ubuntu-latest

        strategy:
            matrix:
              go: [ "1.22", "1.23" ]
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
      
            - name: Setup Go
              uses: actions/setup-go@v5
              with:
                go-version: ${{ matrix.go }}

            - name: Install deps
              shell: bash --noprofile --norc -x -eo pipefail {0}
              run: |
                go install github.com/mattn/goveralls@latest
                go install github.com/wadey/gocovmerge@latest

            - name: Test and coverage
              shell: bash --noprofile --norc -x -eo pipefail {0}
              run: |
                go test -v -run=TestNoRace -p=1 ./test/... --failfast -vet=off
                if [ "${{ matrix.go }}" = "1.23" ]; then
                  ./scripts/cov.sh CI
                else
                  go test -race -v -p=1 ./... --failfast -vet=off -tags=internal_testing
                  go test -race -v -p=1 ./test/... --failfast -vet=off
                  go test -race -v -p=1 ./jetstream/test/... --failfast -vet=off
                  go test -race -v -p=1 ./micro/test/... --failfast -vet=off
                fi

            - name: Coveralls
              if: matrix.go == '1.23'
              uses: coverallsapp/github-action@v2
              with:
               file: acc.out